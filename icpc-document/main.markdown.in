DPは $dp\_v = g(f(dp\_{c\_1}, e\_1) * \dots * f(dp\_{c\_k}, e\_k), v)$ という形の遷移で表されるとする．

**Template Parameters**

- `M`
    - 可換モノイド
- `Cost`
    - 辺のコストの型
- `T apply\_edge(T a, int s, int t, Cost c)`
    - 遷移の $f$
- `T apply\_vertex(T x, int v)`
    - 遷移の $g$

**Operations**

- `Rerooting(int n)`
    - 頂点数 $n$ で木を初期化する
    - 時間計算量: $O(n)$
- `void add\_edge(int u, int v, Cost c)`
    - 頂点 $uv$ 間にコスト $c$ の辺を張る
    - 時間計算量: $O(1)$
- `vector<T> run()`
    - 各頂点を根としたときの木DPの値を求める
    - 時間計算量: $O(n)$

